1. CRUD 개념과 웹 흐름
CRUD란?

CRUD는 데이터를 다루는 기본 네 가지 기능의 약자입니다.

C (Create) : 데이터 생성 (예: 게시글 등록, 회원가입)

R (Read) : 데이터 조회 (예: 게시글 목록 보기, 상세보기)

U (Update) : 데이터 수정 (예: 게시글 수정, 프로필 변경)

D (Delete) : 데이터 삭제 (예: 게시글 삭제, 회원 탈퇴)

CRUD는 데이터베이스뿐 아니라, 웹 애플리케이션의 기본 구조와 흐름을 이해하는 핵심 개념이기도 합니다.

웹에서의 CRUD 동작 흐름

사용자 요청 (Client Request)
사용자가 브라우저를 통해 버튼 클릭, 입력 후 전송 등의 행동을 하면,
클라이언트(웹 브라우저)가 서버로 요청(Request)을 보냅니다.

서버 처리 (Server Processing)
서버는 해당 요청을 받아 데이터베이스(DB)와 상호작용합니다.
예를 들어,

Create: DB에 새 데이터 삽입

Read: DB에서 데이터 조회

Update: 특정 데이터 수정

Delete: 특정 데이터 삭제

응답 (Response)
서버는 처리 결과를 다시 클라이언트로 보냅니다.
이때 주로 JSON 같은 데이터 형식으로 전송되어,
클라이언트(JS 코드 등)가 화면에 결과를 렌더링합니다.

------------------------------------------------

2. 데이터 교환 포맷 및 시리얼라이징 이해

*데이터 교환 포맷이란?

데이터 교환 포맷은 서버와 클라이언트가 데이터를 주고받을 때의 약속된 형태입니다.
대표적인 포맷에는 JSON, XML, YAML이 있습니다.

(1) JSON (JavaScript Object Notation)

가장 널리 사용되는 데이터 교환 형식

사람이 읽기 쉽고, 자바스크립트 객체 구조와 유사함

가볍고 빠르며 대부분의 언어에서 지원함

(2) XML (eXtensible Markup Language)

데이터를 태그(<tag>)로 감싸 표현하는 포맷

(3) YAML (YAML Ain’t Markup Language)

사람에게 읽기 쉬운 문법을 강조한 포맷

들여쓰기로 구조 표현 (JSON보다 간결)

주로 설정 파일이나 데이터 정의에 사용

문서 구조가 명확하고 확장성이 높지만, 다소 무겁고 복잡함

* 시리얼라이징(Serialization)이란?

“데이터를 전송하거나 저장하기 위해 객체를 문자열(텍스트) 형태로 변환하는 과정”

예를 들어, 자바스크립트 객체를 네트워크로 보낼 때 바로 보낼 수 없기 때문에 JSON 문자열로 변환해야 함.

const obj = { name: "홍길동", age: 25 };

// 직렬화 (객체 → 문자열)
const jsonString = JSON.stringify(obj);
console.log(jsonString); // {"name":"홍길동","age":25}

// 역직렬화 (문자열 → 객체)
const parsed = JSON.parse(jsonString);
console.log(parsed.name); // 홍길동
