HTTP(Hyper Text Transfer Protocol)
-> HTTP란 클라이언트와 서버가 서로 데이터를 주고받기 위해 사용되는 통신 규약 (클라이언트-서버 프로토콜)
-> 웹 문서 간에 링크를 통해 연결할 수 있는 프로토콜이며, 문서뿐 아니라 HTML이나 TEXT, 이미지, 음성, 영상, 파일, JSON, XML(API) 등 여러 종류의 데이터들을 폭 넓게 전송할 수 있음
-> 서버 간에 데이터를 주고 받을 때 대부분 HTTP라는 프로토콜을 사용해 통신
ex) http://www.naver.com 와 같이 시작하는 것은 www.naver.com 이라는 인터넷 주소가 가진 데이터 정보 등의 교환을 HTTP의 통신 규약대로 처리하라는 것을 의미한다고 볼 수 있음

HTTP의 통신구조
-> HTTP 통신은 클라이언트(Front-end)와 (Back-end)로 구성
-> 클라이언트가 요청(Request)을 하면 서버가 응답(Response) 하는 것
ex) 클라이언트는 HTTP 메시지를 만들어 보내고 서버에서 그 요청에 대한 응답이 올 때까지 기다림. 그리고 서버는 요청에 대한 결과를 만들어 응답.
클라이언트 (1. 요청) ------> 서버
         <------ (2. 응답)
-> 클리아언트와 서버를 분리하는 이유
: 각자의 역할에 집중할 수 있음. 분리함으로써 클라이언트에서는 복잡한 비즈니스 로직이나 데이터를 다룰 필요 없고 UI를 그리는데 집중
: 서버에서는 비즈니스 로직이나 데이터를 다루는 데에만 집중할 수 있음.

HTTP 의 특징
1. 무상태성 : 서버는 각각의 요청을 별개의 것으로 처리하며 이전 요청의 정보를 저장하지 않음 -> 서버의 부하를 줄이고 클라이언트와 서버 간의 통신을 단순화하여 처리 속도 향상시킴
2. 비연결성 : 요청과 응답이 한 번 이루어지면 연결을 끊음. 이전 요청과 응답의 정보를 유지하지 않기 때문에 서버 부하 줄일 수 있지만 새로운 연결을 맺는 데 드는 시간이 추가로 발생할 수 있음
3. 클라이언트 서버 구조 : Request / Response 구조로 통신. 클라이언트는 서버에 요청 - 서버는 클라이언트에 응답 > 요청과 응답은 HTTP 메시지라는 형식으로 주고 받음
4. HTTP is simple : 간단하고 사람이 읽기 쉽게 만들어짐
5. HTTP is extensible : 확장성이 좋고 테스트하기 좋은 환경을 갖추고 있음 > 새로운 기능이 쉽게 추가될 수 있음
